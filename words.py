nouns= [
    "account",
    "application",
    "ball",
    "blood",
    "charge_n",
    "commission",
    "conversation",
    "declaration",
    "defendant",
    "demonstrator",
    "door",
    "fee",
    "floor",
    "interest",
    "lawsuit",
    "market",
    "melon",
    "nail",
    "network",
    "offender",
    "pencil",
    "person",
    "price",
    "rate",
    "rent",
    "resource",
    "shank",
    "sphere",
    "steel",
    "table",
    "tea",
    "telephone",
    "tooth",
    "tree",
    "wine"
]


sentences = [
    "file account [1 0] [1.0, 0.0]",
    "register account [1. 0.] [0.999, 0.051]",
    "smooth account [0. 1.] [0.047, 0.999]",
    "file nail [1 0] [1.0, 0.0]",
    "register nail [0. 1.] [-0.017, 1.0]",
    "smooth nail [1. 0.] [1.0, -0.03]",
    "file charge_n [1 0] [1.0, 0.0]",
    "register charge_n [1. 0.] [0.852, 0.524]",
    "smooth charge_n [0. 1.] [0.437, 0.899]",
    "file tooth [1 0] [1.0, 0.0]",
    "register tooth [0. 1.] [-0.139, 0.99]",
    "smooth tooth [1. 0.] [0.99, -0.14]",
    "file application [1 0] [1.0, 0.0]",
    "register application [1. 0.] [0.999, -0.032]",
    "smooth application [0. 1.] [0.11, 0.994]",
    "file steel [1 0] [1.0, 0.0]",
    "register steel [0. 1.] [0.679, 0.734]",
    "smooth steel [1. 0.] [0.291, 0.957]",
    "file lawsuit [1 0] [1.0, 0.0]",
    "register lawsuit [1. 0.] [0.968, 0.25]",
    "smooth lawsuit [0. 1.] [0.177, 0.984]",
    "file shank [1 0] [1.0, 0.0]",
    "register shank [0. 1.] [0.572, 0.82]",
    "smooth shank [1. 0.] [0.766, 0.643]",
    "file declaration [1 0] [1.0, 0.0]",
    "register declaration [1. 0.] [1.0, -0.0]",
    "smooth declaration [0. 1.] [0.246, 0.969]",
    "charge rate [1 0] [1.0, 0.0]",
    "bill rate [1. 0.] [0.989, 0.151]",
    "accuse rate [0. 1.] [0.166, 0.986]",
    "charge person [1 0] [1.0, 0.0]",
    "bill person [0. 1.] [-0.159, 0.987]",
    "accuse person [1 0] [0.692, 0.721]",
    "charge price [1 0] [1.0, 0.0]",
    "bill price [1. 0.] [0.997, 0.074]",
    "accuse price [0. 1.] [0.103, 0.995]",
    "charge demonstrator [1 0] [1.0, 0.0]",
    "bill demonstrator [0. 1.] [0.432, 0.902]",
    "accuse demonstrator [1 0] [0.113, 0.994]",
    "charge rent [1 0] [1.0, 0.0]",
    "bill rent [1. 0.] [1.0, 0.021]",
    "accuse rent [0. 1.] [-0.278, 0.961]",
    "charge defendant [1 0] [1.0, 0.0]",
    "bill defendant [0. 1.] [-0.179, 0.984]",
    "accuse defendant [1. 0.] [0.923, 0.386]",
    "charge interest [1 0] [1.0, 0.0]",
    "bill interest [1. 0.] [0.893, 0.45]",
    "accuse interest [0. 1.] [0.26, 0.966]",
    "charge fee [1 0] [1.0, 0.0]",
    "bill fee [1. 0.] [1.0, -0.02]",
    "accuse fee [0. 1.] [0.166, 0.986]",
    "charge offender [1 0] [1.0, 0.0]",
    "bill offender [0. 1.] [0.838, 0.546]",
    "accuse offender [1. 0.] [0.512, 0.859]",
    "charge commission [1 0] [1.0, 0.0]",
    "bill commission [1. 0.] [0.989, 0.148]",
    "accuse commission [0. 1.] [0.275, 0.961]",
    "tap table [1 0] [1.0, 0.0]",
    "intercept table [0. 1.] [0.604, 0.797]",
    "knock table [1. 0.] [0.797, 0.604]",
    "tap telephone [1 0] [1.0, 0.0]",
    "intercept telephone [1. 0.] [0.985, -0.173]",
    "knock telephone [0. 1.] [-0.173, 0.985]",
    "tap tree [1 0] [1.0, 0.0]",
    "intercept tree [0. 1.] [-0.189, 0.982]",
    "knock tree [1. 0.] [0.982, -0.189]",
    "tap conversation [1 0] [1.0, 0.0]",
    "intercept conversation [1. 0.] [0.902, 0.432]",
    "knock conversation [0. 1.] [0.432, 0.902]",
    "tap resource [1 0] [1.0, 0.0]",
    "intercept resource [1. 0.] [0.968, 0.253]",
    "knock resource [0. 1.] [0.253, 0.968]",
    "tap pencil [1 0] [1.0, 0.0]",
    "intercept pencil [0. 1.] [0.669, 0.744]",
    "knock pencil [1. 0.] [0.744, 0.669]",
    "tap door [1 0] [1.0, 0.0]",
    "intercept door [0. 1.] [-0.225, 0.974]",
    "knock door [1. 0.] [0.974, -0.225]",
    "tap network [1 0] [1.0, 0.0]",
    "intercept network [1. 0.] [0.999, 0.045]",
    "knock network [0. 1.] [0.045, 0.999]",
    "tap market [1 0] [1.0, 0.0]",
    "intercept market [1. 0.] [0.776, 0.631]",
    "knock market [0. 1.] [0.631, 0.776]",
    "tap floor [1 0] [1.0, 0.0]",
    "intercept floor [0. 1.] [0.281, 0.96]",
    "knock floor [1. 0.] [0.96, 0.281]",
    "dribble ball [1 0] [1.0, 0.0]",
    "carry ball [1 0] [0.0, 1.0]",
    "drip ball [0. 1.] [0.539, 0.842]",
    "dribble wine [1 0] [1.0, 0.0]",
    "carry wine [0. 1.] [0.0, 1.0]",
    "drip wine [1. 0.] [0.992, 0.123]",
    "dribble blood [1 0] [1.0, 0.0]",
    "carry blood [0. 1.] [0.0, 1.0]",
    "drip blood [1. 0.] [0.999, -0.035]",
    "dribble melon [1 0] [1.0, 0.0]",
    "carry melon [0. 1.] [0.0, 1.0]",
    "drip melon [1. 0.] [0.453, 0.891]",
    "dribble tea [1 0] [1.0, 0.0]",
    "carry tea [0. 1.] [0.0, 1.0]",
    "drip tea [1. 0.] [0.996, 0.088]",
    "dribble sphere [1 0] [1.0, 0.0]",
    "carry sphere [1 0] [0.0, 1.0]",
    "drip sphere [0. 1.] [0.676, 0.737]"
]




sub_sentences_train = [
    "file account [1 0] [1.0, 0.0]",
    "register account [1. 0.] [0.999, 0.051]",
    "smooth account [0. 1.] [0.047, 0.999]",
    "register nail [0. 1.] [-0.017, 1.0]",
    "smooth nail [1. 0.] [1.0, -0.03]",
    "file charge [1 0] [1.0, 0.0]",
    "register charge [1. 0.] [0.852, 0.524]",
    "smooth charge [0. 1.] [0.437, 0.899]",
    "file blood [0 1]",
    "register blood [0 1]",
    "smooth blood [0 1]",
    "file tooth [1 0] [1.0, 0.0]",
    "smooth tooth [1. 0.] [0.99, -0.14]",
    "file application [1 0] [1.0, 0.0]",
    "register application [1. 0.] [0.999, -0.032]",
    "file steel [1 0] [1.0, 0.0]",
    "register steel [0. 1.] [0.679, 0.734]",
    "smooth steel [1. 0.] [0.291, 0.957]",
    "file lawsuit [1 0] [1.0, 0.0]",
    "smooth lawsuit [0. 1.] [0.177, 0.984]",
    "file shank [1 0] [1.0, 0.0]",
    "register shank [0. 1.] [0.572, 0.82]",
    "smooth shank [1. 0.] [0.766, 0.643]",
    "file door [1 0] [1.0, 0.0]",
    "register door [0. 1.] [-0.183, 0.983]",
    "smooth door [0. 1.] [0.52, 0.854]",
    "register declaration [1. 0.] [1.0, -0.0]",
    "smooth declaration [0. 1.] [0.246, 0.969]",
    "file tea [0 1]",
    "register tea [0 1]",
    "smooth tea [0 1]", 
    "file sphere [0 1]",
    "register wine [0 1]",
    "smooth wine [0 1]",
]

sub_sentences_test = [
    "file nail [1 0] [1.0, 0.0]",
    "file declaration [1 0] [1.0, 0.0]",
    "register lawsuit [1. 0.] [0.968, 0.25]",
    "smooth application [0. 1.] [0.11, 0.994]",
    "register tooth [0. 1.] [-0.139, 0.99]",
    "register sphere [0 1]",
    "smooth sphere [0 1]",
    "file wine [0 1]"
]

sub_nouns_train_test = [
    "account",
    "nail",
    "charge",
    "tooth",
    "application",
    "steel",
    "lawsuit",
    "shank",
    "door",
    "declaration",
    "sphere",
    "tea",
    "wine"
]



sub_sentences = [
    "file account [1 0] [1.0, 0.0]",
    "register account [1. 0.] [0.999, 0.051]",
    "smooth account [0. 1.] [0.047, 0.999]",
    "file nail [1 0] [1.0, 0.0]",
    "register nail [0. 1.] [-0.017, 1.0]",
    "smooth nail [1. 0.] [1.0, -0.03]",
    "file charge_n [1 0] [1.0, 0.0]",
    "register charge_n [1. 0.] [0.852, 0.524]",
    "smooth charge_n [0. 1.] [0.437, 0.899]",
    "file tooth [1 0] [1.0, 0.0]",
    "register tooth [0. 1.] [-0.139, 0.99]",
    "smooth tooth [1. 0.] [0.99, -0.14]",
    "file application [1 0] [1.0, 0.0]",
    "register application [1. 0.] [0.999, -0.032]",
    "smooth application [0. 1.] [0.11, 0.994]",
    "file steel [1 0] [1.0, 0.0]",
    "register steel [0. 1.] [0.679, 0.734]",
    "smooth steel [1. 0.] [0.291, 0.957]",
    "file lawsuit [1 0] [1.0, 0.0]",
    "register lawsuit [1. 0.] [0.968, 0.25]",
    "smooth lawsuit [0. 1.] [0.177, 0.984]",
    "file shank [1 0] [1.0, 0.0]",
    "register shank [0. 1.] [0.572, 0.82]",
    "smooth shank [1. 0.] [0.766, 0.643]",
    "file declaration [1 0] [1.0, 0.0]",
    "register declaration [1. 0.] [1.0, -0.0]",
    "smooth declaration [0. 1.] [0.246, 0.969]",
]

sub_nouns = [
    "account",
    "nail",
    "charge",
    "tooth",
    "application",
    "steel",
    "lawsuit",
    "shank",
    "declaration"
]


sub_nouns_train_test = [
    "account",
    "nail",
    "charge",
    "tooth",
    "application",
    "steel",
    "lawsuit",
    "shank",
    "door",
    "declaration",
    "sphere",
    "tea",
    "wine"
]



noun_vectors= {
    "account": [-0.723, 0.2642, -0.5248, 0.3633],
    "application": [-0.7326, 0.3343, -0.5385, 0.2482],
    "ball": [0.4161, 0.0783, -0.3172, 0.8486],
    "blood": [-0.0479, 0.2075, -0.9178, 0.3352],
    "charge_n": [-0.5424, 0.1908, -0.7257, 0.3778],
    "commission": [-0.891, 0.2101, 0.1429, 0.3762],
    "conversation": [0.2944, 0.6949, -0.3218, 0.5717],
    "declaration": [-0.4787, 0.4893, -0.4541, 0.5703],
    "defendant": [0.1225, 0.5828, -0.5197, 0.6125],
    "demonstrator": [-0.4419, 0.14, -0.5075, 0.7263],
    "door": [-0.11, -0.5008, -0.6715, 0.5349],
    "fee": [-0.7712, 0.222, -0.4951, 0.3329],
    "floor": [-0.3457, -0.671, -0.4851, 0.4415],
    "interest": [-0.4113, 0.2674, -0.7568, 0.4319],
    "lawsuit": [-0.0909, 0.3183, -0.2122, 0.9195],
    "market": [-0.7091, -0.097, -0.5788, 0.3909],
    "melon": [0.3245, 0.0767, -0.708, 0.6225],
    "nail": [0.2529, 0.1547, -0.833, 0.4671],
    "network": [-0.9259, 0.0329, -0.2829, 0.2483],
    "offender": [-0.4162, 0.4162, -0.6836, 0.4315],
    "pencil": [-0.093, 0.4754, -0.6821, 0.5478],
    "person": [0.2131, 0.3594, -0.7313, 0.5391],
    "price": [-0.7025, 0.1771, -0.5726, 0.3837],
    "rate": [-0.4509, 0.2131, -0.8, 0.3336],
    "rent": [-0.7239, -0.229, -0.4663, 0.454],
    "resource": [-0.8214, 0.2125, -0.4768, 0.2298],
    "shank": [-0.068, 0.2365, -0.6673, 0.703],
    "sphere": [-0.0086, -0.0374, -0.9119, 0.4085],
    "steel": [-0.5121, -0.0056, -0.6957, 0.5037],
    "table": [-0.4716, 0.1613, -0.7539, 0.4281],
    "tea": [-0.3995, -0.2571, -0.5418, 0.6933],
    "telephone": [-0.9445, 0.1183, -0.0877, 0.2937],
    "tooth": [0.2913, 0.0993, -0.8783, 0.3658],
    "tree": [0.0958, -0.6, -0.6782, 0.4134],
    "wine": [-0.2405, -0.1006, -0.7084, 0.6559]
}


ambiguous_verbs = ["file", "dribble", "tap", "charge"]

pairs = {
    "file": ["register", "smooth"],
    "dribble": ["drip", "carry"],
    "tap": ["intercept", "knock"],
    "charge": ["accuse", "bill"]
}


noun_groups = {
    "file": [],
    "dribble": [],
    "tap": [],
    "charge": []
}

for sentence in sentences:
    s_ = sentence.split(" ")
    if s_[0] in ambiguous_verbs:
        noun_groups[s_[0]].append(s_[1])



